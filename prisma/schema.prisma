// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int         @id @default(autoincrement())
  name          String
  surName       String?
  birthDate     DateTime
  createdAt     DateTime    @default(now())
  updatedAt     DateTime                    // INSERTAR FECHA DE ACTUALIZACIÃ“N "MANUAL"
  status        UserStatus  @default(ACTIVE)
  task          UserTask[]
}

model UserTask {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime 
  taskId        Int
  userId        Int
  task          Tasks     @relation(fields: [taskId], references: [id])
  user          User      @relation(fields: [userId], references: [id])
}
model Tasks {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  day           String
  hour          String
  dayFinish     String?
  isCompleted   Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  task          UserTask[]
  categoryId    Int?      // Clave forenea de la relcion con categoria
  cetegory      Category? @relation(fields: [categoryId], references: [id]) //Relacion con category
}

model Category {
  id              Int       @id @default(autoincrement())
  name            String
  tasks           Tasks[]
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}
